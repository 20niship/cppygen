#include "cppygen_generated.hpp"

#include <pybind11/cast.h>
#include <pybind11/pybind11.h>
#include <pybind11/pytypes.h>
#include <pybind11/stl.h>


/* Function Declarations Start */
namespace cppygen { void foo(); }
namespace cppygen { void foo(int); }
namespace cppygen { void bar(); }
/* Function Declarations End */



namespace CPPyGen {

void CPPyGenExport(pybind11::module_ cppygen)
{

	/* Submodule Declarations Start */
	/* Submodule Declarations End */



	/* Function Export Start */
	cppygen.def("foo", static_cast<void (*)()>(&cppygen::foo), "");
	cppygen.def("foo", static_cast<void (*)(int)>(&cppygen::foo), "", pybind11::arg(""));
	cppygen.def("bar", &cppygen::bar, "");
	/* Function Export End */

	/* Structs and Classes Export Start */
	pybind11::class_<::cppygen::Hoge>(cppygen, "Hoge")
		.def(pybind11::init())
		.def_readwrite("a", &cppygen::Hoge::a, "")
		.def("foo", static_cast<void (cppygen::Hoge::*)()>(&cppygen::Hoge::foo), "")
		.def("foo", static_cast<void (cppygen::Hoge::*)(int)>(&cppygen::Hoge::foo), "")
		.def("bar", &cppygen::Hoge::bar, "")
		.def("__str__", &cppygen::Hoge::to_str, "String Conversion Function");
	/* Structs and Classes Export End */



};
}
